crystal_doc_search_index_callback({"repository_name":"logger","body":"# Logger\n\nFork of the `Logger` class from the stdlib but without the deprecation notices.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     logger:\n       github: 84codes/logger.cr\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"logger\"\n```\n","program":{"html_id":"logger/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"logger","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"logger/Logger","path":"Logger.html","kind":"class","full_name":"Logger","name":"Logger","abstract":false,"superclass":{"html_id":"logger/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"logger/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"logger/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/logger.cr","line_number":48,"url":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L48"}],"repository_name":"logger","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEBUG","name":"DEBUG","value":"Severity::DEBUG","doc":null,"summary":null},{"id":"ERROR","name":"ERROR","value":"Severity::ERROR","doc":null,"summary":null},{"id":"FATAL","name":"FATAL","value":"Severity::FATAL","doc":null,"summary":null},{"id":"INFO","name":"INFO","value":"Severity::INFO","doc":null,"summary":null},{"id":"UNKNOWN","name":"UNKNOWN","value":"Severity::UNKNOWN","doc":null,"summary":null},{"id":"WARN","name":"WARN","value":"Severity::WARN","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The `Logger` class provides a simple but sophisticated logging utility that you can use to output messages.\n\nThe messages have associated levels, such as `INFO` or `ERROR` that indicate their importance.\nYou can then give the `Logger` a level, and only messages at that level or higher will be printed.\n\nFor instance, in a production system, you may have your `Logger` set to `INFO` or even `WARN`.\nWhen you are developing the system, however, you probably want to know about the programâ€™s internal state,\nand would set the `Logger` to `DEBUG`.\n\n### Example\n\n```\nrequire \"logger\"\n\nlog = Logger.new(STDOUT)\nlog.level = Logger::WARN\n\n# or\nlog = Logger.new(STDOUT, level: Logger::WARN)\n\nlog.debug(\"Created logger\")\nlog.info(\"Program started\")\nlog.warn(\"Nothing to do!\")\n\nbegin\n  File.each_line(\"/foo/bar.log\") do |line|\n    unless line =~ /^(\\w+) = (.*)$/\n      log.error(\"Line in wrong format: #{line}\")\n    end\n  end\nrescue err\n  log.fatal(\"Caught exception; exiting\")\n  log.fatal(err)\nend\n```\n\nIf logging to multiple locations is required, an `IO::MultiWriter` can be\nused.\n\n```\nfile = File.new(\"production.log\", \"a\")\nwriter = IO::MultiWriter.new(file, STDOUT)\n\nlog = Logger.new(writer)\nlog.level = Logger::DEBUG\nlog.debug(\"Created logger\")\n```","summary":"<p>The <code><a href=\"Logger.html\">Logger</a></code> class provides a simple but sophisticated logging utility that you can use to output messages.</p>","class_methods":[],"constructors":[{"id":"new(io:IO?,level=Severity::INFO,formatter=DEFAULT_FORMATTER,progname=&quot;&quot;)-class-method","html_id":"new(io:IO?,level=Severity::INFO,formatter=DEFAULT_FORMATTER,progname=&quot;&quot;)-class-method","name":"new","doc":"Creates a new logger that will log to the given *io*.\nIf *io* is `nil` then all log calls will be silently ignored.","summary":"<p>Creates a new logger that will log to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO | ::Nil"},{"name":"level","doc":null,"default_value":"Severity::INFO","external_name":"level","restriction":""},{"name":"formatter","doc":null,"default_value":"DEFAULT_FORMATTER","external_name":"formatter","restriction":""},{"name":"progname","doc":null,"default_value":"\"\"","external_name":"progname","restriction":""}],"args_string":"(io : IO?, level = <span class=\"t\">Severity</span><span class=\"t\">::</span><span class=\"t\">INFO</span>, formatter = <span class=\"t\">DEFAULT_FORMATTER</span>, progname = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L122","def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO | ::Nil"},{"name":"level","doc":null,"default_value":"Severity::INFO","external_name":"level","restriction":""},{"name":"formatter","doc":null,"default_value":"DEFAULT_FORMATTER","external_name":"formatter","restriction":""},{"name":"progname","doc":null,"default_value":"\"\"","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io, level, formatter, progname)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":"Calls the *close* method on the object passed to `initialize`.","summary":"<p>Calls the <em>close</em> method on the object passed to <code>initialize</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L128","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @closed\n  return\nend\nif io = @io\nelse\n  return\nend\n@closed = true\n@mutex.synchronize do\n  io.close\nend\n"}},{"id":"debug(progname=nil,&)-instance-method","html_id":"debug(progname=nil,&)-instance-method","name":"debug","doc":"Logs the message as returned from the given block if the logger's current severity\nis lower or equal to `DEBUG`. The block is not run if the severity is higher.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs the message as returned from the given block if the logger's current severity is lower or equal to <code><a href=\"Logger.html#DEBUG\">DEBUG</a></code>.</p>","abstract":false,"args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(progname = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"debug","args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::DEBUG, progname) do\n  yield\nend"}},{"id":"debug(message,progname=nil)-instance-method","html_id":"debug(message,progname=nil)-instance-method","name":"debug","doc":"Logs *message* if the logger's current severity is lower or equal to `DEBUG`.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs <em>message</em> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#DEBUG\">DEBUG</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(message, progname = <span class=\"n\">nil</span>)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"debug","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::DEBUG, message, progname)"}},{"id":"debug?-instance-method","html_id":"debug?-instance-method","name":"debug?","doc":"Returns `true` if the logger's current severity is lower or equal to `DEBUG`.","summary":"<p>Returns <code>true</code> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#DEBUG\">DEBUG</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"debug?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"level <= Severity::DEBUG"}},{"id":"error(progname=nil,&)-instance-method","html_id":"error(progname=nil,&)-instance-method","name":"error","doc":"Logs the message as returned from the given block if the logger's current severity\nis lower or equal to `ERROR`. The block is not run if the severity is higher.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs the message as returned from the given block if the logger's current severity is lower or equal to <code><a href=\"Logger.html#ERROR\">ERROR</a></code>.</p>","abstract":false,"args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(progname = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"error","args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::ERROR, progname) do\n  yield\nend"}},{"id":"error(message,progname=nil)-instance-method","html_id":"error(message,progname=nil)-instance-method","name":"error","doc":"Logs *message* if the logger's current severity is lower or equal to `ERROR`.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs <em>message</em> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#ERROR\">ERROR</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(message, progname = <span class=\"n\">nil</span>)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"error","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::ERROR, message, progname)"}},{"id":"error?-instance-method","html_id":"error?-instance-method","name":"error?","doc":"Returns `true` if the logger's current severity is lower or equal to `ERROR`.","summary":"<p>Returns <code>true</code> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#ERROR\">ERROR</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"level <= Severity::ERROR"}},{"id":"fatal(progname=nil,&)-instance-method","html_id":"fatal(progname=nil,&)-instance-method","name":"fatal","doc":"Logs the message as returned from the given block if the logger's current severity\nis lower or equal to `FATAL`. The block is not run if the severity is higher.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs the message as returned from the given block if the logger's current severity is lower or equal to <code><a href=\"Logger.html#FATAL\">FATAL</a></code>.</p>","abstract":false,"args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(progname = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"fatal","args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::FATAL, progname) do\n  yield\nend"}},{"id":"fatal(message,progname=nil)-instance-method","html_id":"fatal(message,progname=nil)-instance-method","name":"fatal","doc":"Logs *message* if the logger's current severity is lower or equal to `FATAL`.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs <em>message</em> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#FATAL\">FATAL</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(message, progname = <span class=\"n\">nil</span>)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"fatal","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::FATAL, message, progname)"}},{"id":"fatal?-instance-method","html_id":"fatal?-instance-method","name":"fatal?","doc":"Returns `true` if the logger's current severity is lower or equal to `FATAL`.","summary":"<p>Returns <code>true</code> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#FATAL\">FATAL</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"fatal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"level <= Severity::FATAL"}},{"id":"formatter:Logger::Severity,Time,String,String,IO->Nil-instance-method","html_id":"formatter:Logger::Severity,Time,String,String,IO->Nil-instance-method","name":"formatter","doc":"Customizable `Proc` (with a reasonable default)\nwhich the `Logger` uses to format and print its entries.\n\nUse this setter to provide a custom formatter.\nThe `Logger` will invoke it with the following arguments:\n - severity: a `Logger::Severity`\n - datetime: `Time`, the entry's timestamp\n - progname: `String`, the program name, if set when the logger was built\n - message: `String`, the body of a message\n - io: `IO`, the Logger's stream, to which you must write the final output\n\nExample:\n\n```\nrequire \"logger\"\n\nlogger = Logger.new(STDOUT)\nlogger.progname = \"YodaBot\"\n\nlogger.formatter = Logger::Formatter.new do |severity, datetime, progname, message, io|\n  label = severity.unknown? ? \"ANY\" : severity.to_s\n  io << label[0] << \", [\" << datetime << \" #\" << Process.pid << \"] \"\n  io << label.rjust(5) << \" -- \" << progname << \": \" << message\nend\n\nlogger.warn(\"Fear leads to anger. Anger leads to hate. Hate leads to suffering.\")\n\n# Prints to the console:\n# \"W, [2017-05-06 18:00:41 -0300 #11927]  WARN --\n#  YodaBot: Fear leads to anger. Anger leads to hate. Hate leads to suffering.\"\n```","summary":"<p>Customizable <code>Proc</code> (with a reasonable default) which the <code><a href=\"Logger.html\">Logger</a></code> uses to format and print its entries.</p>","abstract":false,"args":[],"args_string":" : Logger::Severity, Time, String, String, IO -> Nil","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L83","def":{"name":"formatter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@formatter"}},{"id":"formatter=(formatter)-instance-method","html_id":"formatter=(formatter)-instance-method","name":"formatter=","doc":"Customizable `Proc` (with a reasonable default)\nwhich the `Logger` uses to format and print its entries.\n\nUse this setter to provide a custom formatter.\nThe `Logger` will invoke it with the following arguments:\n - severity: a `Logger::Severity`\n - datetime: `Time`, the entry's timestamp\n - progname: `String`, the program name, if set when the logger was built\n - message: `String`, the body of a message\n - io: `IO`, the Logger's stream, to which you must write the final output\n\nExample:\n\n```\nrequire \"logger\"\n\nlogger = Logger.new(STDOUT)\nlogger.progname = \"YodaBot\"\n\nlogger.formatter = Logger::Formatter.new do |severity, datetime, progname, message, io|\n  label = severity.unknown? ? \"ANY\" : severity.to_s\n  io << label[0] << \", [\" << datetime << \" #\" << Process.pid << \"] \"\n  io << label.rjust(5) << \" -- \" << progname << \": \" << message\nend\n\nlogger.warn(\"Fear leads to anger. Anger leads to hate. Hate leads to suffering.\")\n\n# Prints to the console:\n# \"W, [2017-05-06 18:00:41 -0300 #11927]  WARN --\n#  YodaBot: Fear leads to anger. Anger leads to hate. Hate leads to suffering.\"\n```","summary":"<p>Customizable <code>Proc</code> (with a reasonable default) which the <code><a href=\"Logger.html\">Logger</a></code> uses to format and print its entries.</p>","abstract":false,"args":[{"name":"formatter","doc":null,"default_value":"","external_name":"formatter","restriction":""}],"args_string":"(formatter)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L83","def":{"name":"formatter=","args":[{"name":"formatter","doc":null,"default_value":"","external_name":"formatter","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@formatter = formatter"}},{"id":"info(message,progname=nil)-instance-method","html_id":"info(message,progname=nil)-instance-method","name":"info","doc":"Logs *message* if the logger's current severity is lower or equal to `INFO`.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs <em>message</em> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#INFO\">INFO</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(message, progname = <span class=\"n\">nil</span>)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"info","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::INFO, message, progname)"}},{"id":"info(progname=nil,&)-instance-method","html_id":"info(progname=nil,&)-instance-method","name":"info","doc":"Logs the message as returned from the given block if the logger's current severity\nis lower or equal to `INFO`. The block is not run if the severity is higher.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs the message as returned from the given block if the logger's current severity is lower or equal to <code><a href=\"Logger.html#INFO\">INFO</a></code>.</p>","abstract":false,"args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(progname = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"info","args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::INFO, progname) do\n  yield\nend"}},{"id":"info?-instance-method","html_id":"info?-instance-method","name":"info?","doc":"Returns `true` if the logger's current severity is lower or equal to `INFO`.","summary":"<p>Returns <code>true</code> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#INFO\">INFO</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"info?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"level <= Severity::INFO"}},{"id":"level:Severity-instance-method","html_id":"level:Severity-instance-method","name":"level","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Severity","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L49","def":{"name":"level","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Severity","visibility":"Public","body":"@level"}},{"id":"level=(level:Severity)-instance-method","html_id":"level=(level:Severity)-instance-method","name":"level=","doc":null,"summary":null,"abstract":false,"args":[{"name":"level","doc":null,"default_value":"","external_name":"level","restriction":"Severity"}],"args_string":"(level : Severity)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L49","def":{"name":"level=","args":[{"name":"level","doc":null,"default_value":"","external_name":"level","restriction":"Severity"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@level = level"}},{"id":"log(severity,message,progname=nil)-instance-method","html_id":"log(severity,message,progname=nil)-instance-method","name":"log","doc":"Logs *message* if *severity* is higher or equal with the logger's current\nseverity. *progname* overrides a default progname set in this logger.","summary":"<p>Logs <em>message</em> if <em>severity</em> is higher or equal with the logger's current severity.</p>","abstract":false,"args":[{"name":"severity","doc":null,"default_value":"","external_name":"severity","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(severity, message, progname = <span class=\"n\">nil</span>)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L162","def":{"name":"log","args":[{"name":"severity","doc":null,"default_value":"","external_name":"severity","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if severity < level || (!@io)\n  return\nend\nwrite(severity, Time.local, progname || @progname, message)\n"}},{"id":"log(severity,progname=nil,&)-instance-method","html_id":"log(severity,progname=nil,&)-instance-method","name":"log","doc":"Logs the message as returned from the given block if *severity*\nis higher or equal with the loggers current severity. The block is not run\nif *severity* is lower. *progname* overrides a default progname set in this logger.","summary":"<p>Logs the message as returned from the given block if <em>severity</em> is higher or equal with the loggers current severity.</p>","abstract":false,"args":[{"name":"severity","doc":null,"default_value":"","external_name":"severity","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(severity, progname = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L170","def":{"name":"log","args":[{"name":"severity","doc":null,"default_value":"","external_name":"severity","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"if severity < level || (!@io)\n  return\nend\nwrite(severity, Time.local, progname || @progname, yield)\n"}},{"id":"progname:String-instance-method","html_id":"progname:String-instance-method","name":"progname","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L50","def":{"name":"progname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@progname"}},{"id":"progname=(progname:String)-instance-method","html_id":"progname=(progname:String)-instance-method","name":"progname=","doc":null,"summary":null,"abstract":false,"args":[{"name":"progname","doc":null,"default_value":"","external_name":"progname","restriction":"String"}],"args_string":"(progname : String)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L50","def":{"name":"progname=","args":[{"name":"progname","doc":null,"default_value":"","external_name":"progname","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@progname = progname"}},{"id":"unknown(message,progname=nil)-instance-method","html_id":"unknown(message,progname=nil)-instance-method","name":"unknown","doc":"Logs *message* if the logger's current severity is lower or equal to `UNKNOWN`.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs <em>message</em> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#UNKNOWN\">UNKNOWN</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(message, progname = <span class=\"n\">nil</span>)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"unknown","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::UNKNOWN, message, progname)"}},{"id":"unknown(progname=nil,&)-instance-method","html_id":"unknown(progname=nil,&)-instance-method","name":"unknown","doc":"Logs the message as returned from the given block if the logger's current severity\nis lower or equal to `UNKNOWN`. The block is not run if the severity is higher.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs the message as returned from the given block if the logger's current severity is lower or equal to <code><a href=\"Logger.html#UNKNOWN\">UNKNOWN</a></code>.</p>","abstract":false,"args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(progname = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"unknown","args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::UNKNOWN, progname) do\n  yield\nend"}},{"id":"unknown?-instance-method","html_id":"unknown?-instance-method","name":"unknown?","doc":"Returns `true` if the logger's current severity is lower or equal to `UNKNOWN`.","summary":"<p>Returns <code>true</code> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#UNKNOWN\">UNKNOWN</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"unknown?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"level <= Severity::UNKNOWN"}},{"id":"warn(progname=nil,&)-instance-method","html_id":"warn(progname=nil,&)-instance-method","name":"warn","doc":"Logs the message as returned from the given block if the logger's current severity\nis lower or equal to `WARN`. The block is not run if the severity is higher.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs the message as returned from the given block if the logger's current severity is lower or equal to <code><a href=\"Logger.html#WARN\">WARN</a></code>.</p>","abstract":false,"args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(progname = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"warn","args":[{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::WARN, progname) do\n  yield\nend"}},{"id":"warn(message,progname=nil)-instance-method","html_id":"warn(message,progname=nil)-instance-method","name":"warn","doc":"Logs *message* if the logger's current severity is lower or equal to `WARN`.\n*progname* overrides a default progname set in this logger.","summary":"<p>Logs <em>message</em> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#WARN\">WARN</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"args_string":"(message, progname = <span class=\"n\">nil</span>)","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"warn","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"progname","doc":null,"default_value":"nil","external_name":"progname","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log(Severity::WARN, message, progname)"}},{"id":"warn?-instance-method","html_id":"warn?-instance-method","name":"warn?","doc":"Returns `true` if the logger's current severity is lower or equal to `WARN`.","summary":"<p>Returns <code>true</code> if the logger's current severity is lower or equal to <code><a href=\"Logger.html#WARN\">WARN</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L138","def":{"name":"warn?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"level <= Severity::WARN"}}],"macros":[],"types":[{"html_id":"logger/Logger/Formatter","path":"Logger/Formatter.html","kind":"alias","full_name":"Logger::Formatter","name":"Formatter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/logger.cr","line_number":105,"url":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L105"}],"repository_name":"logger","program":false,"enum":false,"alias":true,"aliased":"Proc(Logger::Severity, Time, String, String, IO, Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"logger/Logger","kind":"class","full_name":"Logger","name":"Logger"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"logger/Logger/Severity","path":"Logger/Severity.html","kind":"enum","full_name":"Logger::Severity","name":"Severity","abstract":false,"superclass":null,"ancestors":[{"html_id":"logger/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"logger/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"logger/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"logger/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/logger.cr","line_number":86,"url":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L86"}],"repository_name":"logger","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEBUG","name":"DEBUG","value":"0","doc":"Low-level information for developers","summary":"<p>Low-level information for developers</p>"},{"id":"INFO","name":"INFO","value":"1","doc":"Generic (useful) information about system operation","summary":"<p>Generic (useful) information about system operation</p>"},{"id":"WARN","name":"WARN","value":"2","doc":"A warning","summary":"<p>A warning</p>"},{"id":"ERROR","name":"ERROR","value":"3","doc":"A handleable error condition","summary":"<p>A handleable error condition</p>"},{"id":"FATAL","name":"FATAL","value":"4","doc":"An unhandleable error that results in a program crash","summary":"<p>An unhandleable error that results in a program crash</p>"},{"id":"UNKNOWN","name":"UNKNOWN","value":"5","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"logger/Logger","kind":"class","full_name":"Logger","name":"Logger"},"doc":"A logger severity level.","summary":"<p>A logger severity level.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"debug?-instance-method","html_id":"debug?-instance-method","name":"debug?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L88","def":{"name":"debug?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DEBUG"}},{"id":"error?-instance-method","html_id":"error?-instance-method","name":"error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L97","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ERROR"}},{"id":"fatal?-instance-method","html_id":"fatal?-instance-method","name":"fatal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L100","def":{"name":"fatal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FATAL"}},{"id":"info?-instance-method","html_id":"info?-instance-method","name":"info?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L91","def":{"name":"info?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == INFO"}},{"id":"unknown?-instance-method","html_id":"unknown?-instance-method","name":"unknown?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L102","def":{"name":"unknown?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == UNKNOWN"}},{"id":"warn?-instance-method","html_id":"warn?-instance-method","name":"warn?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/84codes/logger.cr/blob/v1.0.0/src/logger.cr#L94","def":{"name":"warn?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WARN"}}],"macros":[],"types":[]}]}]}})